name: CI
on: push
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image:
          - repo: tonymackay/web-tooling
            path: web-tooling
            platform: linux/amd64
            version: '1.0.0'
          - repo: tonymackay/hugo
            path: hugo
            platform: linux/amd64
            version: '0.73.0'
          - repo: tonymackay/guetzli
            path: guetzli
            platform: linux/amd64
            version: '1.0.1'
          - repo: tonymackay/zopflipng
            path: zopflipng
            platform: linux/amd64
            version: '1.0.3'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Environment Variables
        run: |
          echo ::set-env name=VERSION::"${{ matrix.image.version }}"
          echo ::set-env name=GITHUB_SHA::"${{ github.sha }}"
          echo ::set-env name=GITHUB_REF::"${{ github.ref }}"
          echo ::set-env name=GITHUB_EVENT::"${{ github.event_name }}"
          echo ::set-env name=DOCKER_REPO::"${{ matrix.image.repo }}"
          echo ::set-env name=DOCKER_PLATFORM::"${{ matrix.image.platform }}"
          echo ::set-env name=DOCKER_BUILD_PATH::"${{ matrix.image.path }}"
      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          buildx-version: latest
          qemu-version: latest
      - name: Login to Docker
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login --username "${DOCKER_REPO%%/*}" --password-stdin
      - name: Build/tag/push image
        run: |
          # Publish 'latest' and semantic tags only if pushing to 'master'
          if [[ "$GITHUB_REF" == 'refs/heads/master' && "$GITHUB_EVENT" == 'push' ]]; then
            # Only build when version is not in Docker registry
            if ! curl --fail --silent "https://hub.docker.com/v2/repositories/${DOCKER_REPO}/tags/${VERSION}/" >/dev/null; then
                export DOCKER_TAGS="--tag ${DOCKER_REPO}:${GITHUB_SHA::8}"
                export DOCKER_TAGS="${DOCKER_TAGS} --tag ${DOCKER_REPO}:${VERSION}"
                export DOCKER_TAGS="${DOCKER_TAGS} --tag ${DOCKER_REPO}:latest"
                # Build/tag/push image
                eval docker buildx build --rm --pull --push \
                    --build-arg VERSION="$VERSION" \
                    --build-arg VCS_URL="$(git config --get remote.origin.url)" \
                    --build-arg VCS_REF="$(git rev-parse --short HEAD)" \
                    --build-arg BUILD_DATE="$(date -u +"%Y-%m-%dT%H:%M:%SZ")" \
                    --platform "${DOCKER_PLATFORM}" \
                    "${DOCKER_TAGS}" \
                    "${DOCKER_BUILD_PATH}"
            fi
          fi
